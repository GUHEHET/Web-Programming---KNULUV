/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.31
 * Generated at: 2020-07-01 20:25:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class SignUp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\r\n");
      out.write("\trel=\"stylesheet\" id=\"bootstrap-css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/login.css\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://www.gstatic.com/firebasejs/7.15.5/firebase-app.js\"></script>\r\n");
      out.write("<script\tsrc=\"https://www.gstatic.com/firebasejs/7.15.5/firebase-analytics.js\"></script>\r\n");
      out.write("<script src=\"https://www.gstatic.com/firebasejs/7.15.5/firebase-storage.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\tvar firebaseConfig = {\r\n");
      out.write("\t\tapiKey : \"AIzaSyBaW4hPPV0Pdz6QoXxX1USFIijUgJhqQUg\",\r\n");
      out.write("\t\tauthDomain : \"webprogramming-df368.firebaseapp.com\",\r\n");
      out.write("\t\tdatabaseURL : \"https://webprogramming-df368.firebaseio.com\",\r\n");
      out.write("\t\tprojectId : \"webprogramming-df368\",\r\n");
      out.write("\t\tstorageBucket : \"webprogramming-df368.appspot.com\",\r\n");
      out.write("\t\tmessagingSenderId : \"359102557982\",\r\n");
      out.write("\t\tappId : \"1:359102557982:web:07aca8db80567b3d06e30f\",\r\n");
      out.write("\t\tmeasurementId : \"G-4198BS2X0J\"\r\n");
      out.write("\t};\r\n");
      out.write("\t// Initialize Firebase\r\n");
      out.write("\tfirebase.initializeApp(firebaseConfig);\r\n");
      out.write("\tfirebase.analytics();\r\n");
      out.write("\tvar storage = firebase.storage().ref();\r\n");
      out.write("\tfunction file_upload(email){\r\n");
      out.write("\t\tvar file = document.getElementById('fileItem').files[0];\r\n");
      out.write("\t\tconsole.log(email.split('@')[0]);\r\n");
      out.write("\t\tvar uploadRef = storage.child('img/'+email.split('@')[0]+'.png');\r\n");
      out.write("\t\tuploadRef.put(file).then(function(snapshot){\r\n");
      out.write("\t\t\tconsole.log('upload');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "firebase.jsp", out, false);
      out.write("\r\n");
      out.write("\t<section class=\"login-block signup\">\r\n");
      out.write("\t\t<div class=\"col-md-4 container\">\r\n");
      out.write("\t\t\t<div class=\"login-sec\">\r\n");
      out.write("\t\t\t\t<h2 class=\"text-center\">SIGN UP</h2>\r\n");
      out.write("\t\t\t\t<form class=\"login-form\">\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"text-uppercase\">e-mail</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"form-control\" id=\"email\" placeholder=\"\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"text-uppercase\">비밀번호</label> <input type=\"password\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"form-control\" id=\"pwd\" placeholder=\"\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"text-uppercase\">비밀번호 확인</label> <input\r\n");
      out.write("\t\t\t\t\t\t\ttype=\"password\" class=\"form-control\" id=\"pwd_check\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"text-uppercase\">이름</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"form-control\" id=\"Nickname\" placeholder=\"\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"text-uppercase\">생년월일</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"form-control\" id=\"age\" placeholder=\"yyyymmdd\" maxlength=8>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"text-uppercase\">성별</label> <select\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"form-control\" id=\"sex\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"0\">----</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"1\">남자</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"2\">여자</option>\r\n");
      out.write("\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"text-uppercase\">학과</label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"form-control\" id=\"department\" placeholder=\"\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"text-uppercase\">자기소개</label>\r\n");
      out.write("\t\t\t\t\t\t<textarea rows=\"2\" class=\"form-control\" id=\"text\" ></textarea>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"text-uppercase\">사진</label> <input type=\"file\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"form-control\" value=\"파일선택\" id=\"fileItem\" placeholder=\"\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-login margin \"\r\n");
      out.write("\t\t\t\t\t\tonclick=\"signup(email.value, pwd.value, pwd_check.value, Nickname.value, age.value, sex.value, department.value, text.value); file_upload(email.value);\">SIGN\r\n");
      out.write("\t\t\t\t\t\tUP</button>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
